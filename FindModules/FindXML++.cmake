SET ( XMLPP_PATH
	${XMLPP_PATH}	
	"$ENV{XMLPP_DIR}"
	"$ENV{PROGRAMFILES}/XML++"
	"${3RD_PARTY_DIRECTORY}/XML++"	
)

# simple gl
FIND_PATH ( 
	XMLPP_INCLUDE_DIR
	xml++/parsers.hpp
	PATH_SUFFIXES "include" "XML++"
	PATHS ${XMLPP_PATH}	
)

FIND_LIBRARY ( 
	XMLPP_LIBRARY_DEBUG
	NAMES XML++d
	PATH_SUFFIXES "lib/" "lib64/"		
	PATHS ${XMLPP_PATH}
)

FIND_LIBRARY ( 
	XMLPP_LIBRARY_RELEASE
	NAMES XML++
	PATH_SUFFIXES "lib/" "lib64/"		
	PATHS ${XMLPP_PATH}
)
		
IF ( NOT XMLPP_LIBRARY_RELEASE AND XMLPP_LIBRARY_DEBUG )
	SET ( XMLPP_LIBRARY_RELEASE ${XMLPP_LIBRARY_DEBUG} )
ENDIF ( NOT XMLPP_LIBRARY_RELEASE AND XMLPP_LIBRARY_DEBUG )

IF ( NOT XMLPP_LIBRARY_DEBUG AND XMLPP_LIBRARY_RELEASE )
	SET ( XMLPP_LIBRARY_DEBUG ${XMLPP_LIBRARY_RELEASE} )
ENDIF ( NOT XMLPP_LIBRARY_DEBUG AND XMLPP_LIBRARY_RELEASE )

SET( XMLPP_LIBRARY ${XMLPP_LIBRARY_RELEASE} )
SET( XMLPP_LIBRARIES 
	debug ${XMLPP_LIBRARY_DEBUG}	optimized ${XMLPP_LIBRARY_RELEASE}
)

IF ( XMLPP_INCLUDE_DIR AND XMLPP_LIBRARY )
	SET ( XMLPP_FOUND YES )
	MESSAGE( STATUS "XML++ found: ${XMLPP_LIBRARY}" )
ENDIF ( XMLPP_INCLUDE_DIR AND XMLPP_LIBRARY ) 
 