SET ( BULLET_PATH
	${BULLET_PATH}
	"$ENV{PROGRAMFILES}/bullet"
)

# include path
FIND_PATH (BULLET_INCLUDE_DIR
	NAMES "btBulletCollisionCommon.h"
	PATH_SUFFIXES "bullet" "Bullet" "include"
	PATHS ${BULLET_PATH}
)

# library
FIND_LIBRARY ( BULLET_MATH_LIBRARY_DEBUG
	NAMES LinearMath_d libBulletLinearMath_d LibBulletLinearMath_d bulletmath_d libbulletmath_d
	PATH_SUFFIXES "lib" "lib64"
	PATHS ${BULLET_PATH}
)

FIND_LIBRARY ( BULLET_MATH_LIBRARY_RELEASE
	NAMES LinearMath libLinearMath LibLinearMath bulletmath libbulletmath
	PATH_SUFFIXES "lib" "lib64"
	PATHS ${BULLET_PATH}
)

FIND_LIBRARY ( BULLET_COLLISION_LIBRARY_DEBUG
	NAMES BulletCollision_d libBulletCollision_d LibBulletCollision_d bulletcollision_d libbulletcollision_d
	PATH_SUFFIXES "lib" "lib64"
	PATHS ${BULLET_PATH}
)

FIND_LIBRARY ( BULLET_COLLISION_LIBRARY_RELEASE
	NAMES BulletCollision libBulletCollision LibBulletCollision bulletcollision libbulletcollision
	PATH_SUFFIXES "lib" "lib64"
	PATHS ${BULLET_PATH}
)

FIND_LIBRARY ( BULLET_DYNAMICS_LIBRARY_DEBUG
	NAMES BulletDynamics_d libBulletDynamics_d LibBulletDynamics_d bulletdynamics_d libbulletdynamics_d
	PATH_SUFFIXES "lib" "lib64"
	PATHS ${BULLET_PATH}
)

FIND_LIBRARY ( BULLET_DYNAMICS_LIBRARY_RELEASE
	NAMES BulletDynamics libBulletDynamics LibBulletDynamics bulletdynamics libbulletdynamics
	PATH_SUFFIXES "lib" "lib64"
	PATHS ${BULLET_PATH}
)

FIND_LIBRARY ( BULLET_SOFTBODY_LIBRARY_DEBUG
	NAMES BulletSoftBody_d libBulletSoftBody_d LibBulletSoftBody_d bulletsoftbody_d libbulletsoftbody_d
	PATH_SUFFIXES "lib" "lib64"
	PATHS ${BULLET_PATH}
)

FIND_LIBRARY ( BULLET_SOFTBODY_LIBRARY_RELEASE
	NAMES BulletSoftBody libBulletSoftBody LibBulletSoftBody bulletsoftbody libbulletsoftbody
	PATH_SUFFIXES "lib" "lib64"
	PATHS ${BULLET_PATH}
)

FIND_LIBRARY ( BULLET_OPENGL_LIBRARY_DEBUG
	NAMES OpenglSupport_d libOpenglSupport_d LibOpenglSupport_d openglsupport_d libgopenglsupport_d
	PATH_SUFFIXES "lib" "lib64"
	PATHS ${BULLET_PATH}
)

FIND_LIBRARY ( BULLET_OPENGL_LIBRARY_RELEASE
	NAMES OpenGLSupport libOpenGLSupport LibOpenGLSupport openglsupport libgopenglsupport
	PATH_SUFFIXES "lib" "lib64"
	PATHS ${BULLET_PATH}
)

IF ( BULLET_MATH_LIBRARY_RELEASE AND NOT BULLET_MATH_LIBRARY_DEBUG )
    SET ( BULLET_MATH_LIBRARY_DEBUG ${BULLET_MATH_LIBRARY_RELEASE} )
ELSEIF ( BULLET_MATH_LIBRARY_DEBUG AND NOT BULLET_MATH_LIBRARY_RELEASE )
    SET ( BULLET_MATH_LIBRARY_RELEASE ${BULLET_MATH_LIBRARY_DEBUG} )
ENDIF ( BULLET_MATH_LIBRARY_RELEASE AND NOT BULLET_MATH_LIBRARY_DEBUG )

IF ( BULLET_DYNAMICS_LIBRARY_RELEASE AND NOT BULLET_DYNAMICS_LIBRARY_DEBUG )
    SET ( BULLET_DYNAMICS_LIBRARY_DEBUG ${BULLET_DYNAMICS_LIBRARY_RELEASE} )
ELSEIF ( BULLET_DYNAMICS_LIBRARY_DEBUG AND NOT BULLET_DYNAMICS_LIBRARY_RELEASE )
    SET ( BULLET_DYNAMICS_LIBRARY_RELEASE ${BULLET_DYNAMICS_LIBRARY_DEBUG} )
ENDIF ( BULLET_DYNAMICS_LIBRARY_RELEASE AND NOT BULLET_DYNAMICS_LIBRARY_DEBUG )

IF ( BULLET_SOFTBODY_LIBRARY_RELEASE AND NOT BULLET_SOFTBODY_LIBRARY_DEBUG )
    SET ( BULLET_SOFTBODY_LIBRARY_DEBUG ${BULLET_SOFTBODY_LIBRARY_RELEASE} )
ELSEIF ( BULLET_SOFTBODY_LIBRARY_DEBUG AND NOT BULLET_SOFTBODY_LIBRARY_RELEASE )
    SET ( BULLET_SOFTBODY_LIBRARY_RELEASE ${BULLET_SOFTBODY_LIBRARY_DEBUG} )
ENDIF ( BULLET_SOFTBODY_LIBRARY_RELEASE AND NOT BULLET_SOFTBODY_LIBRARY_DEBUG )

IF ( BULLET_COLLISION_LIBRARY_RELEASE AND NOT BULLET_COLLISION_LIBRARY_DEBUG )
    SET ( BULLET_COLLISION_LIBRARY_DEBUG ${BULLET_COLLISION_LIBRARY_RELEASE} )
ELSEIF ( BULLET_COLLISION_LIBRARY_DEBUG AND NOT BULLET_COLLISION_LIBRARY_RELEASE )
    SET ( BULLET_COLLISION_LIBRARY_RELEASE ${BULLET_COLLISION_LIBRARY_DEBUG} )
ENDIF ( BULLET_COLLISION_LIBRARY_RELEASE AND NOT BULLET_COLLISION_LIBRARY_DEBUG )

IF ( BULLET_OPENGL_LIBRARY_RELEASE AND NOT BULLET_OPENGL_LIBRARY_DEBUG )
    SET ( BULLET_OPENGL_LIBRARY_DEBUG ${BULLET_OPENGL_LIBRARY_RELEASE} )
ELSEIF ( BULLET_OPENGL_LIBRARY_DEBUG AND NOT BULLET_OPENGL_LIBRARY_RELEASE )
    SET ( BULLET_OPENGL_LIBRARY_RELEASE ${BULLET_OPENGL_LIBRARY_DEBUG} )
ENDIF ( BULLET_OPENGL_LIBRARY_RELEASE AND NOT BULLET_OPENGL_LIBRARY_DEBUG )

SET ( BULLET_MATH_LIBRARY ${BULLET_MATH_LIBRARY_RELEASE} )
SET ( BULLET_COLLISION_LIBRARY ${BULLET_COLLISION_LIBRARY_RELEASE} )
SET ( BULLET_DYNAMICS_LIBRARY ${BULLET_DYNAMICS_LIBRARY_RELEASE} )
SET ( BULLET_SOFTBODY_LIBRARY ${BULLET_SOFTBODY_LIBRARY_RELEASE} )
SET ( BULLET_OPENGL_LIBRARY ${BULLET_OPENGL_LIBRARY_RELEASE} )

SET ( BULLET_LIBRARIES
	debug ${BULLET_DYNAMICS_LIBRARY_DEBUG}		optimized ${BULLET_DYNAMICS_LIBRARY_RELEASE}
	debug ${BULLET_SOFTBODY_LIBRARY_DEBUG}		optimized ${BULLET_SOFTBODY_LIBRARY_RELEASE}	
	debug ${BULLET_COLLISION_LIBRARY_DEBUG}		optimized ${BULLET_COLLISION_LIBRARY_RELEASE}
	debug ${BULLET_MATH_LIBRARY_DEBUG}		optimized ${BULLET_MATH_LIBRARY_RELEASE}
)

# optional
IF ( BULLET_OPENGL_LIBRARY )
    SET ( BULLET_LIBRARIES
        ${BULLET_LIBRARIES}
	    debug ${BULLET_OPENGL_LIBRARY_DEBUG}		optimized ${BULLET_OPENGL_LIBRARY_RELEASE}	  
	)
ENDIF ( BULLET_OPENGL_LIBRARY ) 

IF ( BULLET_SOFTBODY_LIBRARY )
    SET ( BULLET_LIBRARIES
        ${BULLET_LIBRARIES}
	    debug ${BULLET_SOFTBODY_LIBRARY_DEBUG}		optimized ${BULLET_SOFTBODY_LIBRARY_RELEASE}	  
	)
ENDIF ( BULLET_SOFTBODY_LIBRARY ) 

IF ( BULLET_INCLUDE_DIR AND BULLET_MATH_LIBRARY AND BULLET_COLLISION_LIBRARY AND BULLET_DYNAMICS_LIBRARY )
	SET ( BULLET_FOUND YES )
	MESSAGE( STATUS "Bullet found: ${BULLET_MATH_LIBRARY}\n ${BULLET_COLLISION_LIBRARY}\n ${BULLET_DYNAMICS_LIBRARY}" )
ENDIF ( BULLET_INCLUDE_DIR AND BULLET_MATH_LIBRARY AND BULLET_COLLISION_LIBRARY AND BULLET_DYNAMICS_LIBRARY ) 
